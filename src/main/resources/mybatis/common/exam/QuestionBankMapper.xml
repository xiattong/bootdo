<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.exam.dao.QuestionBankDao">

	<select id="get" resultType="com.bootdo.exam.domain.QuestionBankDO">
		select `id`,`question_type`,`question`,`options`,`answer` from exam_question_bank where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.exam.domain.QuestionBankDO">
		select `id`,`question_type`,`question`,`options`,`answer` from exam_question_bank
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="questionType != null and questionType != ''"> and question_type = #{questionType} </if>
		  		  <if test="question != null and question != ''"> and question = #{question} </if>
		  		  <if test="options != null and options != ''"> and options = #{options} </if>
		  		  <if test="answer != null and answer != ''"> and answer = #{answer} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from exam_question_bank
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="questionType != null and questionType != ''"> and question_type = #{questionType} </if>
		  		  <if test="question != null and question != ''"> and question = #{question} </if>
		  		  <if test="options != null and options != ''"> and options = #{options} </if>
		  		  <if test="answer != null and answer != ''"> and answer = #{answer} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.exam.domain.QuestionBankDO">
		insert into exam_question_bank
		(
			`id`, 
			`question_type`, 
			`question`, 
			`options`, 
			`answer`
		)
		values
		(
			#{id}, 
			#{questionType}, 
			#{question}, 
			#{options}, 
			#{answer}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.exam.domain.QuestionBankDO">
		update exam_question_bank 
		<set>
			<if test="questionType != null">`question_type` = #{questionType}, </if>
			<if test="question != null">`question` = #{question}, </if>
			<if test="options != null">`options` = #{options}, </if>
			<if test="answer != null">`answer` = #{answer}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from exam_question_bank where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from exam_question_bank where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="randomListByType" resultType="com.bootdo.exam.domain.QuestionBankDO">
		select `id`,`question_type`,`question`,`options`,`answer` from exam_question_bank
		where question_type = #{questionType}
		order by rand()
		limit #{num}
	</select>

	<select id="listByMenu" parameterType="java.lang.String" resultType="com.bootdo.exam.domain.QuestionBankDO">
		select `id`,`question_type`,`question`,`options`,`answer` from exam_question_bank
		<where>
			<foreach collection="ids.split(',')" item="item" open="(" separator=" or " close=")">
				id = #{item}
			</foreach>
		</where>
		order by id
	</select>

</mapper>